      subroutine diag_comp_allband_test(ilocal,E_st,err_st,vr,workr_n,
     &    kpt,iislda)

****************************************
c     c     Written by Lin-Wang Wang, March 30, 2001. 
*************************************************************************
*     *  copyright (c) 2003, The Regents of the University of California,
*     *  through Lawrence Berkeley National Laboratory (subject to receipt of any
*     *  required approvals from the U.S. Dept. of Energy).  All rights reserved.
*************************************************************************
****************************************
****  The main conjugate gradient routine
****  mbad=0, normal iCG=1 run, ave_err not used
****  mbad>0, called from CG_new, fix the states: mx-mbad,mx to ave_err
******************************************
******************************************
      use fft_data
      use load_data
      use data

      implicit double precision (a-h,o-z)

      include 'mpif.h'
      include 'param.escan_real'
***********************************************
      complex*16 ugh_m(mg_nx,mx), overlap_mat(mx,mx)
      complex*16, allocatable, dimension(:,:) :: C_tmp

      real*8 Dij0(32,32,mtype),Qij(32,32,mtype)
      integer isNLa(9,matom),ipsp_type(mtype)

      real*8 vr(mr_n)
      complex*16 workr_n(mr_n)
      complex*16 cc, c_one, c_zero
**********************************************
****  if iopt=0 is used, pghh_old can be deleted
**********************************************
      real*8 E_st(mst),err_st(mst)
      complex*16 sumdum_m(32,natom,mx),sumdum2_m(32,natom,mx)
      real*8 occ_t(mtype)
      integer iiatom(mtype),icore(mtype),numref(matom),ityatom(mtype)

      common /com123b/m1,m2,m3,ngb,nghb,ntype,rrcut,msb
      common /comEk/Ek
      common /comisNLa/isNLa,Dij0,Qij,ipsp_all,ipsp_type
      common /comNL2/occ_t,iiatom,icore,numref,ityatom

      complex*16 sss

      complex*16 h(mst,mst),hh(mst,mst)
      parameter (lwork=6000)
      complex*16 workx(lwork)
      real*8 workrx(3*mst)
      integer info
      complex*16, allocatable, dimension(:,:) :: ug_n_tmp


      ng_n=ngtotnod(inode,kpt)


!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
!     Subspace diagonalizaton.
!
!     Following whole section should be equivalenct to calling diag_comp_allband.
!       call diag_comp_allband(ilocal,E_st,err_st,vr,workr_n,kpt,iislda)
!
      c_one=dcmplx(1.d0,0.d0)
      c_zero=dcmplx(0.d0,0.d0)

!!     Caculate H*psi.
!!     This segment is equivalent to calling Hpsi_comp_Allband.   
    
      allocate(ug_n_tmp(mg_nx,mst))
      ug_n_tmp = c_zero
      ug_n_tmp(:,band_dis(1):band_dis(2)) = ug_n_bp(:,:)
      call mpi_allreduce(ug_n_tmp,ug_n,mg_nx*mst,
     &     MPI_DOUBLE_COMPLEX,MPI_SUM,MPI_COMM_B2,ierr)
      deallocate(ug_n_tmp)

      call Hpsi_comp_AllBandBP(ug_n(1,1),ugh_m(1,1),mx,
     &    ilocal,vr,workr_n,kpt,1,sumdum_m,iislda)

c$$$      do m=band_dis(1),band_dis(2)
c$$$         do i=1,ng_n
c$$$            ugh_m(i,m)=ugh_m(i,m)*cos_th_m(m)
c$$$     &           + pgh_m(i,m)*sin_th_m(m)
c$$$         enddo
c$$$      enddo
      
c$$$      allocate(ug_n_tmp(mg_nx,mst))
c$$$      ug_n_tmp = c_zero
c$$$      ug_n_tmp(:,band_dis(1):band_dis(2)) 
c$$$     &     = ugh_m(:,band_dis(1):band_dis(2))
c$$$      call mpi_allreduce(ug_n_tmp,ugh_m,mg_nx*mst,
c$$$     &     MPI_DOUBLE_COMPLEX,MPI_SUM,MPI_COMM_B2,ierr)
c$$$
c$$$      ug_n_tmp = c_zero
c$$$      ug_n_tmp(:,band_dis(1):band_dis(2)) 
c$$$     &     = uig_n(:,band_dis(1):band_dis(2))
c$$$      call mpi_allreduce(ug_n_tmp,ug_n,mg_nx*mst,
c$$$     &     MPI_DOUBLE_COMPLEX,MPI_SUM,MPI_COMM_B2,ierr)
c$$$      deallocate(ug_n_tmp)


c$$$      allocate(C_tmp(mg_nx,mx))
c$$$      CALL zgemm('N','N',ng_n,mx,mx,c_one,
c$$$     &     ugh_m,mg_nx,U_cholesky,mx,c_zero,C_tmp,mg_nx)
c$$$      ugh_m = C_tmp
c$$$      deallocate(C_tmp)


!!     Calculate the overlap matrix h.
      CALL zgemm('c','n',mst,mst,ng_n,c_one,ugh_m,mg_nx,ug_n,
     &   mg_nx,c_zero,h,mst)

      CALL mpi_allreduce(h,hh,mst*mst,MPI_DOUBLE_COMPLEX,
     &     MPI_SUM,MPI_COMM_K,ierr)
      

!!     Diagonalize the overlap matrix h. (h is not normalized.)
      call system_czheev('V','U',mx,hh,mst,E_st,workx,
     &     lwork,workrx,info)

      E_st = E_st*vol

!!     Rotate the wavefunction.
       allocate(ug_n_tmp(mg_nx,mst))
       call zgemm('N','N',ng_n,mst,mst,c_one,ug_n,mg_nx,hh,mst,
     &  c_zero,ug_n_tmp,mg_nx)

       ug_n(1:ng_n,1:mst)=ug_n_tmp(1:ng_n,1:mst)
       ug_n_bp(:,:) = ug_n(:,band_dis(1):band_dis(2))
       deallocate(ug_n_tmp)

!     End of subspace diagonalization.
!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


*********************************
***********************************
      if(inode_tot.eq.1) then
       write(6,*) "*********************************"
       write(6,*) "*****kpt= ", kpt
       write(6,*) "report from diag_real"
       write(6,*) "eigen energies, in eV"
       write(6,103) (E_st(i)*27.211396d0, i=1,mx)
       write(6,*) "*********************************"
      endif
101   format(5(i6,7x))
102   format(5(E10.4,3x))
103   format(5(f12.8,1x))



      return

       end
